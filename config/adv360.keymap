
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &mo 3  &kp GRAVE  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS             &kp PAGE_DOWN   &kp PAGE_UP  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN          &none     &none
   &kp TAB      &kp Q          &kp W             &kp F           &kp P                 &kp B            &kp DOWN_ARROW  &kp UP_ARROW                  &kp J            &kp L              &kp U             &kp Y  &kp SEMICOLON  &kp BSLH
  &kp CAPS      &kp A          &kp R             &kp S           &kp T                 &kp G                  &kp HOME     &kp LCTRL               &kp LALT                                              &kp LGUI      &kp RCTRL   &kp END   &kp M   &kp N      &kp E    &kp I     &kp O          &kp SQT
 &kp LSHFT      &kp Z          &kp X             &kp C           &kp D                 &kp V                     &none         &none         &kp LEFT_ARROW            &none              &none   &kp RIGHT_ARROW          &none     &none   &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
     &mo 2      &none          &none             &none           &mo 1              &kp BSPC                   &kp DEL       &kp ESC                &kp TAB        &kp ENTER          &kp SPACE             &none          &none     &none   &none   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
     &mo 3   &none   &none   &none   &none     &none              &none      &mo 3     &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB   &kp Q   &kp W   &kp E   &kp R     &kp T              &none      &none     &none   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
  &kp CAPS   &kp A   &kp S   &kp D   &kp F     &kp G              &none  &kp LCTRL  &kp LALT                                 &kp LGUI        &kp RCTRL       &none   &none  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT   &kp Z   &kp X   &kp C   &kp V     &kp B              &none      &none     &none       &none         &none          &none            &none       &none   &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2   &none   &none   &none   &mo 1  &kp BSPC            &kp DEL      &none     &none   &kp ENTER     &kp SPACE         &kp UP        &kp KP_N0  &kp KP_DOT   &none      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none    &none   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                   &trans   &trans    &none  &trans   &none   &none   &none  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none   &trans    &none    &none  &trans   &none   &none   &none  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans    &none   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
